import tkinter as tk
from tkinter import messagebox
import sqlite3
from cryptography.fernet import Fernet, InvalidToken

def create_table():
    conn = sqlite3.connect("passwords.db")
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS passwords (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT NOT NULL,
            password TEXT NOT NULL
        )
    """)
    conn.commit()
    conn.close()

def get_key():
    try:
        with open("encryption_key.key", "rb") as key_file:
            key = key_file.read()
    except FileNotFoundError:
        key = Fernet.generate_key()
        with open("encryption_key.key", "wb") as key_file:
            key_file.write(key)
    return key

def encrypt_password(password):
    key = get_key()
    cipher_suite = Fernet(key)
    encrypted_password = cipher_suite.encrypt(password.encode()).decode()
    return encrypted_password

def decrypt_password(encrypted_password):
    key = get_key()
    cipher_suite = Fernet(key)
    try:
        decrypted_password = cipher_suite.decrypt(encrypted_password.encode()).decode()
        return decrypted_password
    except InvalidToken as e:
        print(f"Error decrypting password: {e}")
        return "Decryption Error"

def save_password():
    username = entry_username.get()
    password = entry_password.get()

    if not username or not password:
        messagebox.showerror("Error", "Please enter both username and password.")
        return

    encrypted_password = encrypt_password(password)

    conn = sqlite3.connect("passwords.db")
    cursor = conn.cursor()
    cursor.execute("INSERT INTO passwords (username, password) VALUES (?, ?)", (username, encrypted_password))
    conn.commit()
    conn.close()

    messagebox.showinfo("Success", "Password saved successfully.")

def show_passwords():
    conn = sqlite3.connect("passwords.db")
    cursor = conn.cursor()
    cursor.execute("SELECT username, password FROM passwords")
    results = cursor.fetchall()
    conn.close()

    if not results:
        messagebox.showinfo("Info", "No passwords saved.")
    else:
        passwords_str = "\n".join(f"Username: {result[0]}, Password: {decrypt_password(result[1])}" for result in results)
        messagebox.showinfo("Saved Passwords", f"Saved Passwords:\n{passwords_str}")

root = tk.Tk()
root.title("Password Manager")

create_table()

label_username = tk.Label(root, text="Username:")
label_username.grid(row=0, column=0, padx=10, pady=10, sticky="e")

entry_username = tk.Entry(root)
entry_username.grid(row=0, column=1, padx=10, pady=10, sticky="w")

label_password = tk.Label(root, text="Password:")
label_password.grid(row=1, column=0, padx=10, pady=10, sticky="e")

entry_password = tk.Entry(root)
entry_password.grid(row=1, column=1, padx=10, pady=10, sticky="w")

button_save = tk.Button(root, text="Save Password", command=save_password)
button_save.grid(row=2, column=0, columnspan=2, pady=10)

button_show_passwords = tk.Button(root, text="Show Saved Passwords", command=show_passwords)
button_show_passwords.grid(row=3, column=0, columnspan=2, pady=10)

root.mainloop()
